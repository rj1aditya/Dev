Default copy constructor and assignment operator provided by comiler is use to creates a copy of object.
but the  copying method they use is known as a memberwise copy (also known as a shallow copy).

3 ways of initialing the object:
  a.) direct initialization: T t(x);
  Note: In above case constructor of T class would get called for initalizing a veriable.
  
  b.) copy initialization: T t = x;
  Note: In above case copy constructor of T class would get called. Which is intentionally not needed in above case.
  Copy initialization constructs an implicit conversion sequence: 
  It tries to convert x to an object of type T. 
  (It then may copy over that object into the to-initialized object, so a copy constructor is needed too - but this is not important below)
  
  c.) uniform initialization: list<int> li{1,2,3};
